// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: getNumberOfTasksByType.sql

package database

import (
	"context"
)

const getNumberOfTasksByType = `-- name: GetNumberOfTasksByType :many
SELECT type, COUNT(*) AS task_count
FROM tasks
GROUP BY type
`

type GetNumberOfTasksByTypeRow struct {
	Type      int64
	TaskCount int64
}

func (q *Queries) GetNumberOfTasksByType(ctx context.Context) ([]GetNumberOfTasksByTypeRow, error) {
	rows, err := q.db.QueryContext(ctx, getNumberOfTasksByType)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetNumberOfTasksByTypeRow
	for rows.Next() {
		var i GetNumberOfTasksByTypeRow
		if err := rows.Scan(&i.Type, &i.TaskCount); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
