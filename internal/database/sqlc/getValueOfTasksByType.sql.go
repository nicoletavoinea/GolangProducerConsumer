// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: getValueOfTasksByType.sql

package database

import (
	"context"
)

const getValueOfTasksByType = `-- name: GetValueOfTasksByType :many
SELECT type, SUM(value) AS values_sum
FROM tasks
GROUP BY type
`

type GetValueOfTasksByTypeRow struct {
	Type      int32
	ValuesSum int64
}

func (q *Queries) GetValueOfTasksByType(ctx context.Context) ([]GetValueOfTasksByTypeRow, error) {
	rows, err := q.db.QueryContext(ctx, getValueOfTasksByType)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetValueOfTasksByTypeRow
	for rows.Next() {
		var i GetValueOfTasksByTypeRow
		if err := rows.Scan(&i.Type, &i.ValuesSum); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
